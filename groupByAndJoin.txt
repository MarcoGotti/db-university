Group by:
1. Contare quanti iscritti ci sono stati ogni anno

SELECT COUNT(id) AS `enrolled_students`, YEAR(`enrolment_date`) AS `enrolment_year` FROM `students` GROUP BY `enrolment_year`;
________________________________________________   
    
2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

SELECT COUNT(id) AS `number_of_professors`, `office_address` FROM `teachers` GROUP BY `office_address`;
__________________________________________________

3. Calcolare la media dei voti di ogni appello d'esame

SELECT SUM(`vote`) / COUNT(*) AS `media_voti`, exam_id FROM `exam_student` GROUP BY `exam_id`;
__________________________________________________

4. Contare quanti corsi di laurea ci sono per ogni dipartimento

SELECT COUNT(*) AS `num_of_degrees`, `department_id` FROM `degrees` GROUP BY `department_id`;
_____________________________________________________
_____________________________________________________


Joins:

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT `students`.`*`, `degrees`.`id`, `degrees`.`name` FROM `students` JOIN `degrees` ON `students`.`degree_id`=`degrees`.`id` WHERE `degrees`.`id`=53;

SELECT `students`.`surname`, `students`.`name`, `degrees`.`id`, `degrees`.`name` FROM `students` JOIN `degrees` ON `students`.`degree_id`=`degrees`.`id` WHERE `degrees`.`name`= "Corso di Laurea in Economia";
_______________________________________________________

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

SELECT `degrees`.`*`, `departments`.`name` FROM `departments` JOIN `degrees` ON `departments`.`id`=`degrees`.`department_id` WHERE `departments`.`id`=7;

SELECT `degrees`.`*`, `departments`.`name` FROM `departments` JOIN `degrees` ON `departments`.`id`=`degrees`.`department_id` WHERE `departments`.`name`="Dipartimento di Neuroscienze";
____________________________________________________________

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT * FROM `course_teacher` WHERE `teacher_id`=44;

SELECT * FROM `course_teacher` JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id` WHERE `teachers`.`id`=44;

SELECT * FROM `course_teacher` JOIN `courses` ON `course_teacher`.`course_id` = `courses`.`id` WHERE `course_teacher`.`teacher_id`=44;
______________________________________________________________

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT `students`.`name`, `students`.`surname`, `degrees`.`*`, `departments`.`name`
FROM `students`
JOIN `degrees`
ON `students`.`degree_id`= `degrees`.`id`
JOIN `departments`
ON `degrees`.`department_id`= `departments`.`id`
ORDER BY `students`.`surname` ASC;

SELECT `students`.`name`, `students`.`surname`, `degrees`.`*`, `departments`.`name`
FROM `students`
JOIN `degrees`
ON `students`.`degree_id`= `degrees`.`id`
JOIN `departments`
ON `degrees`.`department_id`= `departments`.`id`
ORDER BY `students`.`name` ASC;

______________________________________________________________

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT `degrees`.`name` AS `corso_laurea`, `courses`.`name` AS `corso`, `teachers`.`surname` AS `professor`
FROM `degrees`
JOIN `courses`
ON `degrees`.`id` = `courses`.`degree_id`
JOIN `course_teacher`
ON `course_teacher`.`course_id` = `courses`.`id`
JOIN `teachers`
ON `course_teacher`.`teacher_id` = `teachers`.`id`
ORDER BY `degrees`.`name` ASC;
____________________________________________________________

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

SELECT DISTINCT `teachers`.`surname` AS `professor_of_Department_of_Mathematics`, `teachers`.`name`
FROM `teachers`
JOIN `course_teacher`
ON `course_teacher`.`teacher_id`=`teachers`.`id`
JOIN `courses`
ON `courses`.`id`=`course_teacher`.`course_id`
JOIN `degrees`
ON `degrees`.`id`=`courses`.`degree_id`
JOIN `departments`
ON `departments`.`id`=`degrees`.`department_id`
WHERE `departments`.`name`="Dipartimento di Matematica";
_________________________________________________________

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti per ogni esame, stampando anche il voto massimo. Successivamente, filtrare i tentativi con voto minimo 18.

SELECT COUNT(*) AS `attempts`, `students`.`name`, students.surname, courses.name, AVG(exam_student.vote) AS `average_vote`, MAX(exam_student.vote) AS `best_vote`, MIN(exam_student.vote) AS `worse_vote`
FROM `students`
JOIN `exam_student` ON `exam_student`.`student_id`= students.id
JOIN `exams` ON `exams`.`id`= `exam_student`.`exam_id`
JOIN `courses` ON `courses`.`id`= `exams`.`course_id`
GROUP BY students.id, courses.id
HAVING `worse_vote`>=18;